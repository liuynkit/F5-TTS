hydra:
  run:
    dir: ckpts/iwslt25/bigc_bem_finetune/${model.name}_${model.mel_spec.mel_spec_type}_${model.tokenizer}_${datasets.name}/${now:%Y-%m-%d}/${now:%H-%M-%S}
    
datasets:
  # 38400/64 = 600  600*256/24000=6.4s for sample-duration in average
  name: bigc_bem  # dataset name  19200*2*3 = 115200 19200*2*2= 76800
  batch_size_per_gpu: 20000 # 8 GPUs, 8 * 38400 = 307200  19200*2*4 = 153600 24000*2*2=96000
  batch_size_type: frame  # "frame" or "sample"
  max_samples: 64  # max sequences per batch if use frame-wise batch_size. we set 32 for small models, 64 for base models
  num_workers: 4

optim:
  total_updates: 100000
  learning_rate: 7.5e-5
  num_warmup_updates: 10000  # warmup updates
  grad_accumulation_steps: 3 # note: updates = steps / grad_accumulation_steps
  max_grad_norm: 1.0  # gradient clipping
  bnb_optimizer: False  # use bnb 8bit AdamW optimizer or not

model:
  name: E2TTS_Base
  tokenizer: pinyin
  tokenizer_path: None  # if tokenizer = 'custom', define the path to the tokenizer you want to use (should be vocab.txt)
  arch:
    dim: 1024
    depth: 24
    heads: 16
    ff_mult: 4
  mel_spec:
    target_sample_rate: 16000
    n_mel_channels: 100
    hop_length: 256
    win_length: 1024
    n_fft: 1024
    mel_spec_type: vocos  # 'vocos' or 'bigvgan'
  vocoder:
    is_local: False  # use local offline ckpt or not
    local_path: None  # local vocoder path

ckpts:
  logger: wandb  # wandb | tensorboard | None
  save_per_updates: 5000  # save checkpoint per updates
  keep_last_n_checkpoints: -1  # -1 to keep all, 0 to not save intermediate, > 0 to keep last N checkpoints
  last_per_updates: 1000  # save last checkpoint per updates
  save_dir: ckpts/iwslt25/bigc_bem_finetune/${model.name}_${model.mel_spec.mel_spec_type}_${model.tokenizer}_${datasets.name}/checkpoints

mode:
  finetune: True
  pretrain: "/export/data1/data/yliu/checkpoints/e2tts/pretrain_en/model_1200000.pt"